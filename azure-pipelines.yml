# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master
- feature/*
- bugfix/*

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'
  major: 0
  minor: 4

stages:
- stage: VersionNonMaster
  displayName: Versioning (non-master)
  condition: ne(variables['Build.SourceBranch'], 'refs/heads/master')
  jobs:
  - job: VersionNonMaster
    displayName: Set version
    variables:
       prpatch: $[counter(variables['system.pullrequest.pullrequestnumber'], 0)]
       brpatch: $[counter(variables['build.sourcebranchname'], 0)]
    steps:
      - bash: |
           echo "##vso[build.updatebuildnumber]$(major).$(minor)-PullRequest-$(System.PullRequest.PullRequestNumber).$(prpatch)"
        condition: eq(variables['Build.Reason'], 'PullRequest')
        name: SetPRBuildName
      - bash: |
           echo "##vso[build.updatebuildnumber]$(major).$(minor)-$(Build.SourceBranchName).$(brpatch)"
        condition: and(ne(variables['Build.SourceBranch'], 'refs/heads/master'), ne(variables['Build.Reason'], 'PullRequest'))
        name: SetBranchBuildName
- stage: VersionMaster
  displayName: Versioning (master)
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
  jobs:        
  - job: VersionMaster
    displayName: Set version
    
    variables:
       patch: $[counter(variables['minor'], 0)]
    steps:
      - bash: |
           echo "##vso[build.updatebuildnumber]$(major).$(minor).$(patch)"
        name: SetMasterBuildName
        
- stage: Build
  displayName: "Build & package"
  condition: always()
  jobs:  
  - job: Build
    displayName: "Build, test and publish"
    steps:
      - task: NuGetToolInstaller@0
        displayName: NuGet Install

      - task: NuGetCommand@2
        displayName: NuGet Restore
        inputs:
          command: 'restore'
          restoreSolution: '**/*.sln'
          feedsToUse: 'config'
          nugetConfigPath: 'nuget.config'

      - task: XamarinAndroid@1
        displayName: Build
        inputs:
          projectFile: '**/*.csproj'
          jdkOption: 'JDKVersion'
      
      - task: PublishBuildArtifacts@1
        displayName: Publish artifacts
        inputs:
          pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
          artifactName: 'drop' 

      


